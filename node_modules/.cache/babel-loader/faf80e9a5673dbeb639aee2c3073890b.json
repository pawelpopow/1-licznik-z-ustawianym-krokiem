{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pawel/Desktop/1-licznik-z-ustawianym-krokiem/src/Counter.js\";\nimport React, { Component } from 'react';\nimport './Counter.css';\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel'; // import Clock from './Clock';\n\nimport ClockFunctional from './ClockFunctional';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = action => {\n      // ES6 method\n      this.setState((prevState, prevProps) => {\n        let currentCounterValue = prevState.counterValue;\n\n        if (action === 'add') {\n          currentCounterValue += 1;\n        } else if (action === 'reinit') {\n          currentCounterValue = prevProps.initValue;\n        } else {\n          currentCounterValue = 0;\n        }\n\n        return {\n          counterValue: currentCounterValue\n        };\n      });\n    };\n\n    this.toggleClock = () => {\n      this.setState(prevState => {\n        return {\n          showClock: !prevState.showClock\n        };\n      });\n    };\n\n    this.state = {\n      counterValue: this.props.initValue,\n      showClock: true\n    }; // binding needed when this.changeValue is a ES5 method\n    // this.changeValue = this.changeValue.bind(this);\n  } // changeValue() { // ES5 method (no this context by default)\n\n\n  render() {\n    let clockElement = '';\n\n    if (this.state.showClock) {\n      // clockElement = <Clock toggleClockMethod={this.toggleClock} />;\n      clockElement = /*#__PURE__*/_jsxDEV(ClockFunctional, {\n        toggleClockMethod: this.toggleClock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 28\n      }, this);\n    } else {\n      clockElement = /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.toggleClock,\n        className: \"show-clock\",\n        children: \"show clock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [\"Counter:\", /*#__PURE__*/_jsxDEV(Display, {\n        displayValue: this.state.counterValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsPanel, {\n        buttonMethod: this.changeValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), clockElement]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counter; // function Counter(props) {\n//     let randomNumber = Math.floor(Math.random()*(108 - 1 + 1) + 1);\n//     return (\n//         <div className=\"counter\">\n//             Counter:\n//             <span className=\"value\">\n//                 {props.initValue}\n//             </span>\n//         </div>\n//     );\n// }\n// export default Counter;","map":{"version":3,"sources":["/Users/pawel/Desktop/1-licznik-z-ustawianym-krokiem/src/Counter.js"],"names":["React","Component","Display","ButtonsPanel","ClockFunctional","Counter","constructor","props","changeValue","action","setState","prevState","prevProps","currentCounterValue","counterValue","initValue","toggleClock","showClock","state","render","clockElement"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAE5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,WAbmB,GAaJC,MAAD,IAAY;AAAE;AAGxB,WAAKC,QAAL,CAAc,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAEpC,YAAIC,mBAAmB,GAAGF,SAAS,CAACG,YAApC;;AAEA,YAAIL,MAAM,KAAK,KAAf,EAAsB;AAClBI,UAAAA,mBAAmB,IAAI,CAAvB;AACH,SAFD,MAEO,IAAIJ,MAAM,KAAK,QAAf,EAAyB;AAC5BI,UAAAA,mBAAmB,GAAGD,SAAS,CAACG,SAAhC;AACH,SAFM,MAEA;AACHF,UAAAA,mBAAmB,GAAG,CAAtB;AACH;;AAED,eAAO;AACHC,UAAAA,YAAY,EAAED;AADX,SAAP;AAGH,OAfD;AAgBH,KAhCkB;;AAAA,SAkCnBG,WAlCmB,GAkCL,MAAM;AAChB,WAAKN,QAAL,CAAeC,SAAD,IAAe;AACzB,eAAO;AACHM,UAAAA,SAAS,EAAE,CAACN,SAAS,CAACM;AADnB,SAAP;AAGH,OAJD;AAKH,KAxCkB;;AAGf,SAAKC,KAAL,GAAa;AACTJ,MAAAA,YAAY,EAAE,KAAKP,KAAL,CAAWQ,SADhB;AAETE,MAAAA,SAAS,EAAE;AAFF,KAAb,CAHe,CAQf;AACA;AACH,GAZ2B,CAc5B;;;AA8BAE,EAAAA,MAAM,GAAG;AAEL,QAAIC,YAAY,GAAC,EAAjB;;AACA,QAAG,KAAKF,KAAL,CAAWD,SAAd,EAAyB;AACrB;AACAG,MAAAA,YAAY,gBAAG,QAAC,eAAD;AAAiB,QAAA,iBAAiB,EAAE,KAAKJ;AAAzC;AAAA;AAAA;AAAA;AAAA,cAAf;AACH,KAHD,MAGO;AACHI,MAAAA,YAAY,gBAAG;AAAM,QAAA,OAAO,EAAE,KAAKJ,WAApB;AAAiC,QAAA,SAAS,EAAC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf;AACH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,0CAEI,QAAC,OAAD;AAAS,QAAA,YAAY,EAAE,KAAKE,KAAL,CAAWJ;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,YAAD;AAAc,QAAA,YAAY,EAAE,KAAKN;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKY,YAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA/D2B;;AAkEhC,eAAef,OAAf,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport './Counter.css';\n\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel';\n// import Clock from './Clock';\nimport ClockFunctional from './ClockFunctional';\n\nclass Counter extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            counterValue: this.props.initValue,\n            showClock: true,\n        };\n\n        // binding needed when this.changeValue is a ES5 method\n        // this.changeValue = this.changeValue.bind(this);\n    }\n\n    // changeValue() { // ES5 method (no this context by default)\n    changeValue = (action) => { // ES6 method\n\n\n        this.setState((prevState, prevProps) => {\n\n            let currentCounterValue = prevState.counterValue;\n            \n            if (action === 'add') {\n                currentCounterValue += 1;\n            } else if (action === 'reinit') {\n                currentCounterValue = prevProps.initValue;\n            } else {\n                currentCounterValue = 0;\n            }\n\n            return({ \n                counterValue: currentCounterValue\n            });\n        });\n    }\n\n    toggleClock = () => {\n        this.setState((prevState) => {\n            return({\n                showClock: !prevState.showClock\n            });\n        })\n    }\n\n    render() {\n\n        let clockElement='';\n        if(this.state.showClock) {\n            // clockElement = <Clock toggleClockMethod={this.toggleClock} />;\n            clockElement = <ClockFunctional toggleClockMethod={this.toggleClock} />;\n        } else {\n            clockElement = <span onClick={this.toggleClock} className=\"show-clock\">show clock</span>;\n        }\n        \n        return (\n            <div className=\"counter\">\n                Counter:\n                <Display displayValue={this.state.counterValue} />\n                <ButtonsPanel buttonMethod={this.changeValue}/>\n                {clockElement}\n\n            </div>\n        );\n    }\n}\n\nexport default Counter; \n\n// function Counter(props) {\n\n//     let randomNumber = Math.floor(Math.random()*(108 - 1 + 1) + 1);\n\n//     return (\n//         <div className=\"counter\">\n//             Counter:\n//             <span className=\"value\">\n//                 {props.initValue}\n//             </span>\n            \n//         </div>\n//     );\n// }\n\n// export default Counter; \n"]},"metadata":{},"sourceType":"module"}