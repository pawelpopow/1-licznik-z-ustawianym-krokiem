{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pawel/Desktop/repositories/counter-app/src/Counter.js\";\nimport React, { Component } from 'react';\nimport './Counter.css';\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = action => {\n      // ES6 method\n      let currentCounterValue = this.state.counterValue;\n\n      if (action === 'add') {\n        currentCounterValue += 1;\n      } else if (action === 'reinit') {\n        currentCounterValue = this.props.initValue;\n      } else {\n        currentCounterValue = 0;\n      }\n\n      this.setState((prevState, prevProps) => {});\n    };\n\n    this.state = {\n      counterValue: this.props.initValue\n    }; // binding needed when this.changeValue is a ES5 method\n    // this.changeValue = this.changeValue.bind(this);\n  } // changeValue() { // ES5 method (no this context by default)\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [\"Counter:\", /*#__PURE__*/_jsxDEV(Display, {\n        displayValue: this.state.counterValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsPanel, {\n        buttonMethod: this.changeValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counter; // function Counter(props) {\n//     let randomNumber = Math.floor(Math.random()*(108 - 1 + 1) + 1);\n//     return (\n//         <div className=\"counter\">\n//             Counter:\n//             <span className=\"value\">\n//                 {props.initValue}\n//             </span>\n//         </div>\n//     );\n// }\n// export default Counter;","map":{"version":3,"sources":["/Users/pawel/Desktop/repositories/counter-app/src/Counter.js"],"names":["React","Component","Display","ButtonsPanel","Counter","constructor","props","changeValue","action","currentCounterValue","state","counterValue","initValue","setState","prevState","prevProps","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE5BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,WAZmB,GAYJC,MAAD,IAAY;AAAE;AAExB,UAAIC,mBAAmB,GAAG,KAAKC,KAAL,CAAWC,YAArC;;AACA,UAAIH,MAAM,KAAK,KAAf,EAAsB;AAClBC,QAAAA,mBAAmB,IAAI,CAAvB;AACH,OAFD,MAEO,IAAID,MAAM,KAAK,QAAf,EAAyB;AAC5BC,QAAAA,mBAAmB,GAAG,KAAKH,KAAL,CAAWM,SAAjC;AACH,OAFM,MAEA;AACHH,QAAAA,mBAAmB,GAAG,CAAtB;AACH;;AAED,WAAKI,QAAL,CAAc,CAACC,SAAD,EAAYC,SAAZ,KAA0B,CAAE,CAA1C;AACH,KAxBkB;;AAGf,SAAKL,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,KAAKL,KAAL,CAAWM;AADhB,KAAb,CAHe,CAOf;AACA;AACH,GAX2B,CAa5B;;;AAeAI,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,0CAEI,QAAC,OAAD;AAAS,QAAA,YAAY,EAAE,KAAKN,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,YAAD;AAAc,QAAA,YAAY,EAAE,KAAKJ;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAtC2B;;AAyChC,eAAeH,OAAf,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport './Counter.css';\n\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel';\n\nclass Counter extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            counterValue: this.props.initValue\n        };\n\n        // binding needed when this.changeValue is a ES5 method\n        // this.changeValue = this.changeValue.bind(this);\n    }\n\n    // changeValue() { // ES5 method (no this context by default)\n    changeValue = (action) => { // ES6 method\n\n        let currentCounterValue = this.state.counterValue;\n        if (action === 'add') {\n            currentCounterValue += 1;\n        } else if (action === 'reinit') {\n            currentCounterValue = this.props.initValue;\n        } else {\n            currentCounterValue = 0;\n        }\n\n        this.setState((prevState, prevProps) => {});\n    }\n\n    render() {\n        \n        return (\n            <div className=\"counter\">\n                Counter:\n                <Display displayValue={this.state.counterValue} />\n                <ButtonsPanel buttonMethod={this.changeValue}/>\n                \n            </div>\n        );\n    }\n}\n\nexport default Counter; \n\n// function Counter(props) {\n\n//     let randomNumber = Math.floor(Math.random()*(108 - 1 + 1) + 1);\n\n//     return (\n//         <div className=\"counter\">\n//             Counter:\n//             <span className=\"value\">\n//                 {props.initValue}\n//             </span>\n            \n//         </div>\n//     );\n// }\n\n// export default Counter; \n"]},"metadata":{},"sourceType":"module"}