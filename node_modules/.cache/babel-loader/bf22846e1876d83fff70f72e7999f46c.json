{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pawel/Desktop/1-licznik-z-ustawianym-krokiem/src/Counter.js\";\nimport React, { Component } from 'react';\nimport './Counter.css';\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel';\nimport Step from './Step';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = action => {\n      // ES6 method\n      this.setState((prevState, prevProps) => {\n        let currentCounterValue = prevState.counterValue;\n\n        if (action === 'add') {\n          currentCounterValue += 1;\n        } else if (action === 'reinit') {\n          currentCounterValue = prevProps.initValue;\n        } else {\n          currentCounterValue = 0;\n        }\n\n        return {\n          counterValue: currentCounterValue\n        };\n      });\n    };\n\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Krok:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: props.stepValue,\n          onChange: props.updateStepTyping\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this);\n  } //changeValue() { // ES5 method (no this context by default)\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [\"Licznik:\", /*#__PURE__*/_jsxDEV(Display, {\n        displayValue: this.state.counterValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsPanel, {\n        buttonMethod: this.changeValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counter; // function Counter(props) {\n//     let randomNumber = Math.floor(Math.random() * (108 - 1 + 1) + 1);\n//     return (\n//         <div className=\"counter\">\n//             Counter:\n//             <span className=\"value\">\n//                 {props.initValue}\n//             </span>\n//         </div>\n//     );\n// }\n// export default Counter;","map":{"version":3,"sources":["/Users/pawel/Desktop/1-licznik-z-ustawianym-krokiem/src/Counter.js"],"names":["React","Component","Display","ButtonsPanel","Step","Counter","constructor","props","changeValue","action","setState","prevState","prevProps","currentCounterValue","counterValue","initValue","state","value","handleChange","bind","handleSubmit","event","target","alert","preventDefault","render","stepValue","updateStepTyping"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAG5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAyBnBC,WAzBmB,GAyBJC,MAAD,IAAY;AAAE;AAExB,WAAKC,QAAL,CAAc,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAEpC,YAAIC,mBAAmB,GAAGF,SAAS,CAACG,YAApC;;AAEA,YAAIL,MAAM,KAAK,KAAf,EAAsB;AAClBI,UAAAA,mBAAmB,IAAI,CAAvB;AACH,SAFD,MAEO,IAAIJ,MAAM,KAAK,QAAf,EAAyB;AAC5BI,UAAAA,mBAAmB,GAAGD,SAAS,CAACG,SAAhC;AACH,SAFM,MAEA;AACHF,UAAAA,mBAAmB,GAAG,CAAtB;AACH;;AAED,eAAO;AACHC,UAAAA,YAAY,EAAED;AADX,SAAP;AAGH,OAfD;AAgBH,KA3CkB;;AAEf,SAAKG,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAAK,SAAKX,QAAL,CAAc;AAACO,MAAAA,KAAK,EAAEI,KAAK,CAACC,MAAN,CAAaL;AAArB,KAAd;AAA8C;;AACvEG,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBE,IAAAA,KAAK,CAAC,2BAA2B,KAAKP,KAAL,CAAWC,KAAvC,CAAL;AACAI,IAAAA,KAAK,CAACG,cAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA,6BACE;AAAA,yCAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,GAAG,EAAC,GAAzB;AAA6B,UAAA,KAAK,EAAEb,KAAK,CAACmB,SAA1C;AAAqD,UAAA,QAAQ,EAAEnB,KAAK,CAACoB;AAArE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAzByB,CA2B5B;;;AAqBAF,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,0CAEI,QAAC,OAAD;AAAS,QAAA,YAAY,EAAE,KAAKT,KAAL,CAAWF;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,YAAD;AAAc,QAAA,YAAY,EAAE,KAAKN;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA1D2B;;AA6DhC,eAAeH,OAAf,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport './Counter.css';\n\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel';\nimport Step from './Step';\n\nclass Counter extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleChange(event) {    this.setState({value: event.target.value});  }\n      handleSubmit(event) {\n        alert('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n      }\n    \n      render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n            <label>\n                Krok:\n                <input type=\"number\" min=\"1\" value={props.stepValue} onChange={props.updateStepTyping}></input>       \n            </label>\n          </form>\n        );\n      }\n\n    //changeValue() { // ES5 method (no this context by default)\n    changeValue = (action) => { // ES6 method\n\n        this.setState((prevState, prevProps) => {\n            \n            let currentCounterValue = prevState.counterValue;\n\n            if (action === 'add') {\n                currentCounterValue += 1;\n            } else if (action === 'reinit') {\n                currentCounterValue = prevProps.initValue;\n            } else {\n                currentCounterValue = 0;\n            }\n\n            return({\n                counterValue: currentCounterValue\n            });\n        });\n    }\n\n    render() {\n\n        return (\n            <div className=\"counter\">\n                Licznik:\n                <Display displayValue={this.state.counterValue} />\n                <ButtonsPanel buttonMethod={this.changeValue} />\n                <Step />\n            </div>\n        );\n    }\n}\n\nexport default Counter;\n\n// function Counter(props) {\n\n//     let randomNumber = Math.floor(Math.random() * (108 - 1 + 1) + 1);\n\n//     return (\n//         <div className=\"counter\">\n//             Counter:\n//             <span className=\"value\">\n//                 {props.initValue}\n//             </span>\n//         </div>\n//     );\n// }\n\n// export default Counter;\n\n"]},"metadata":{},"sourceType":"module"}