{"ast":null,"code":"import React, { Component } from 'react';\nimport './Counter.css';\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel';\nimport Step from './Step';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addOne = () => {\n      this.setState(prevState => {\n        return {\n          counterValue: prevState.counterValue + 1\n        };\n      });\n    };\n\n    this.addStep = event => {\n      this.setState(prevState => {\n        return {\n          counterValue: prevState.counterValue + parseInt(this.state.stepValue)\n        };\n      });\n      event.preventDefault();\n    };\n\n    this.updateStep = event => {\n      console.log(event.target.value);\n      this.setState({\n        stepValue: event.target.value\n      });\n    };\n\n    let initValue = 0;\n    let stepValue;\n\n    if (!isNaN(this.props.initValue)) {\n      initValue = parseInt(this.props.initValue);\n    }\n\n    this.state = {\n      counterValue: initValue,\n      stepValue: ''\n    };\n  }\n\n} // class Counter extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             counterValue: this.props.initValue\n//         };\n//         // binding needed when this.changeValue is a ES5 method\n//         // this.changeValue = this.changeValue.bind(this);\n//     }\n//     //changeValue() { // ES5 method (no this context by default)\n//     changeValue = (action) => { // ES6 method\n//         this.setState((prevState, prevProps) => {\n//             let currentCounterValue = prevState.counterValue;\n//             if (action === 'add') {\n//                 currentCounterValue += 1;\n//             } else if (action === 'reinit') {\n//                 currentCounterValue = prevProps.initValue;\n//             } else {\n//                 currentCounterValue = 0;\n//             }\n//             return({\n//                 counterValue: currentCounterValue\n//             });\n//         });\n//     }\n//     render() {\n//         return (\n//             <div className=\"counter\">\n//                 Counter:\n//                 <Display displayValue={this.state.counterValue} />\n//                 <ButtonsPanel buttonMethod={this.changeValue} />\n//                 <Step  />\n//             </div>\n//         );\n//     }\n// }\n// export default Counter;\n// function Counter(props) {\n//     let randomNumber = Math.floor(Math.random() * (108 - 1 + 1) + 1);\n//     return (\n//         <div className=\"counter\">\n//             Counter:\n//             <span className=\"value\">\n//                 {props.initValue}\n//             </span>\n//         </div>\n//     );\n// }\n// export default Counter;","map":{"version":3,"sources":["/Users/pawel/Desktop/1-licznik-z-ustawianym-krokiem/src/Counter.js"],"names":["React","Component","Display","ButtonsPanel","Step","Counter","constructor","props","addOne","setState","prevState","counterValue","addStep","event","parseInt","state","stepValue","preventDefault","updateStep","console","log","target","value","initValue","isNaN"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAE5BK,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAiBpBC,MAjBoB,GAiBX,MAAM;AACX,WAAKC,QAAL,CAAcC,SAAS,IAAE;AACrB,eAAO;AAACC,UAAAA,YAAY,EAAED,SAAS,CAACC,YAAV,GAAyB;AAAxC,SAAP;AACH,OAFD;AAGH,KArBmB;;AAAA,SAuBpBC,OAvBoB,GAuBTC,KAAD,IAAW;AACjB,WAAKJ,QAAL,CAAcC,SAAS,IAAE;AACrB,eAAO;AAACC,UAAAA,YAAY,EAAED,SAAS,CAACC,YAAV,GAAyBG,QAAQ,CAAC,KAAKC,KAAL,CAAWC,SAAZ;AAAhD,SAAP;AACH,OAFD;AAGAH,MAAAA,KAAK,CAACI,cAAN;AACH,KA5BmB;;AAAA,SA8BpBC,UA9BoB,GA8BPL,KAAK,IAAI;AAClBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,MAAN,CAAaC,KAAzB;AACA,WAAKb,QAAL,CAAc;AAACO,QAAAA,SAAS,EAAEH,KAAK,CAACQ,MAAN,CAAaC;AAAzB,OAAd;AACH,KAjCmB;;AAGhB,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIP,SAAJ;;AAEA,QAAG,CAACQ,KAAK,CAAC,KAAKjB,KAAL,CAAWgB,SAAZ,CAAT,EAAiC;AAC7BA,MAAAA,SAAS,GAAGT,QAAQ,CAAC,KAAKP,KAAL,CAAWgB,SAAZ,CAApB;AACH;;AAED,SAAKR,KAAL,GAAa;AACTJ,MAAAA,YAAY,EAAEY,SADL;AAETP,MAAAA,SAAS,EAAE;AAFF,KAAb;AAKH;;AAjB2B,C,CAqChC;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport './Counter.css';\n\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel';\nimport Step from './Step'\n\nclass Counter extends Component {\n\n    constructor (props) {\n        super(props);\n\n        let initValue = 0;\n        let stepValue;\n\n        if(!isNaN(this.props.initValue)) {\n            initValue = parseInt(this.props.initValue);\n        }\n\n        this.state = {\n            counterValue: initValue,\n            stepValue: ''\n        };       \n\n    }\n\n    addOne = () => {\n        this.setState(prevState=>{\n            return({counterValue: prevState.counterValue + 1});\n        })\n    }\n\n    addStep = (event) => {\n        this.setState(prevState=>{\n            return({counterValue: prevState.counterValue + parseInt(this.state.stepValue)});\n        })\n        event.preventDefault();\n    }\n\n    updateStep = event => {\n        console.log(event.target.value);\n        this.setState({stepValue: event.target.value})\n    }\n}\n// class Counter extends Component {\n\n//     constructor(props) {\n//         super(props);\n\n//         this.state = {\n//             counterValue: this.props.initValue\n//         };\n\n//         // binding needed when this.changeValue is a ES5 method\n//         // this.changeValue = this.changeValue.bind(this);\n//     }\n\n//     //changeValue() { // ES5 method (no this context by default)\n//     changeValue = (action) => { // ES6 method\n\n//         this.setState((prevState, prevProps) => {\n            \n//             let currentCounterValue = prevState.counterValue;\n\n//             if (action === 'add') {\n//                 currentCounterValue += 1;\n//             } else if (action === 'reinit') {\n//                 currentCounterValue = prevProps.initValue;\n//             } else {\n//                 currentCounterValue = 0;\n//             }\n\n//             return({\n//                 counterValue: currentCounterValue\n//             });\n\n            \n//         });\n//     }\n\n//     render() {\n\n//         return (\n//             <div className=\"counter\">\n//                 Counter:\n//                 <Display displayValue={this.state.counterValue} />\n//                 <ButtonsPanel buttonMethod={this.changeValue} />\n//                 <Step  />\n\n//             </div>\n//         );\n//     }\n// }\n\n// export default Counter;\n\n// function Counter(props) {\n\n//     let randomNumber = Math.floor(Math.random() * (108 - 1 + 1) + 1);\n\n//     return (\n//         <div className=\"counter\">\n//             Counter:\n//             <span className=\"value\">\n//                 {props.initValue}\n//             </span>\n//         </div>\n//     );\n// }\n\n// export default Counter;\n\n"]},"metadata":{},"sourceType":"module"}