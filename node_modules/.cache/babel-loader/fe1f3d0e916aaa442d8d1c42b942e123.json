{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pawel/Desktop/1-licznik-z-ustawianym-krokiem/src/Counter.js\";\nimport React, { Component } from 'react';\nimport './Counter.css';\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel';\nimport Step from './Step';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addOne = () => {\n      this.setState(prevState => {\n        return {\n          counterValue: prevState.counterValue + parseInt(this.state.stepValue)\n        };\n      });\n    };\n\n    this.addStep = event => {\n      this.setState(prevState => {\n        return {\n          counterValue: prevState.counterValue + parseInt(this.state.stepValue)\n        };\n      });\n      event.preventDefault();\n    };\n\n    this.updateStep = event => {\n      console.log(event.target.value);\n      this.setState({\n        stepValue: event.target.value\n      });\n    };\n\n    this.reset = resetBool => {\n      if (resetBool) {\n        this.setState({\n          counterValue: 0\n        });\n      } else {\n        this.setState({\n          counterValue: this.props.initValue\n        });\n      }\n    };\n\n    let initValue = 0;\n\n    if (!isNaN(this.props.initValue)) {\n      initValue = parseInt(this.props.initValue);\n    }\n\n    this.state = {\n      counterValue: initValue,\n      stepValue: ''\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        counterCurrentValue: this.state.counterValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsPanel, {\n        changeValue: this.addOne,\n        resetValue: this.reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        updateStepTyping: this.updateStep,\n        stepValue: this.state.stepValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/pawel/Desktop/1-licznik-z-ustawianym-krokiem/src/Counter.js"],"names":["React","Component","Display","ButtonsPanel","Step","Counter","constructor","props","addOne","setState","prevState","counterValue","parseInt","state","stepValue","addStep","event","preventDefault","updateStep","console","log","target","value","reset","resetBool","initValue","isNaN","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAE5BK,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAiBpBC,MAjBoB,GAiBX,MAAM;AACX,WAAKC,QAAL,CAAcC,SAAS,IAAE;AACrB,eAAO;AAACC,UAAAA,YAAY,EAAED,SAAS,CAACC,YAAV,GAAyBC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,SAAZ;AAAhD,SAAP;AACH,OAFD;AAGH,KArBmB;;AAAA,SAuBpBC,OAvBoB,GAuBTC,KAAD,IAAW;AACjB,WAAKP,QAAL,CAAcC,SAAS,IAAE;AACrB,eAAO;AAACC,UAAAA,YAAY,EAAED,SAAS,CAACC,YAAV,GAAyBC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,SAAZ;AAAhD,SAAP;AACH,OAFD;AAGAE,MAAAA,KAAK,CAACC,cAAN;AACH,KA5BmB;;AAAA,SA8BpBC,UA9BoB,GA8BPF,KAAK,IAAI;AAClBG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,MAAN,CAAaC,KAAzB;AACA,WAAKb,QAAL,CAAc;AAACK,QAAAA,SAAS,EAAEE,KAAK,CAACK,MAAN,CAAaC;AAAzB,OAAd;AACH,KAjCmB;;AAAA,SAmCpBC,KAnCoB,GAmCZC,SAAS,IAAI;AACjB,UAAGA,SAAH,EAAc;AACV,aAAKf,QAAL,CAAc;AAACE,UAAAA,YAAY,EAAE;AAAf,SAAd;AACH,OAFD,MAEO;AACH,aAAKF,QAAL,CAAc;AAACE,UAAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWkB;AAA1B,SAAd;AACH;AACJ,KAzCmB;;AAGhB,QAAIA,SAAS,GAAG,CAAhB;;AAGA,QAAG,CAACC,KAAK,CAAC,KAAKnB,KAAL,CAAWkB,SAAZ,CAAT,EAAiC;AAC7BA,MAAAA,SAAS,GAAGb,QAAQ,CAAC,KAAKL,KAAL,CAAWkB,SAAZ,CAApB;AACH;;AAED,SAAKZ,KAAL,GAAa;AACTF,MAAAA,YAAY,EAAEc,SADL;AAETX,MAAAA,SAAS,EAAE;AAFF,KAAb;AAKH;;AA6BDa,EAAAA,MAAM,GAAG;AACLR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,mBAAmB,EAAE,KAAKM,KAAL,CAAWF;AAAzC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAc,QAAA,WAAW,EAAE,KAAKH,MAAhC;AAAwC,QAAA,UAAU,EAAE,KAAKe;AAAzD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,gBAAgB,EAAE,KAAKL,UAA7B;AAA0C,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWC;AAAhE;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAvD2B;;AA0DhC,eAAeT,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport './Counter.css';\n\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel';\nimport Step from './Step';\n\nclass Counter extends Component {\n\n    constructor (props) {\n        super(props);\n\n        let initValue = 0;\n        \n\n        if(!isNaN(this.props.initValue)) {\n            initValue = parseInt(this.props.initValue);\n        }\n\n        this.state = {\n            counterValue: initValue,\n            stepValue: ''\n        };       \n\n    }\n\n    addOne = () => {\n        this.setState(prevState=>{\n            return({counterValue: prevState.counterValue + parseInt(this.state.stepValue)});\n        })\n    }\n\n    addStep = (event) => {\n        this.setState(prevState=>{\n            return({counterValue: prevState.counterValue + parseInt(this.state.stepValue)});\n        })\n        event.preventDefault();\n    }\n\n    updateStep = event => {\n        console.log(event.target.value);\n        this.setState({stepValue: event.target.value})\n    }\n    \n    reset = resetBool => {\n        if(resetBool) {\n            this.setState({counterValue: 0})\n        } else {\n            this.setState({counterValue: this.props.initValue})\n        }\n    }\n    \n    \n    render() {\n        console.log(this.props);\n        return(\n            <div className='counter'>\n                <Display counterCurrentValue={this.state.counterValue}/>\n                <ButtonsPanel changeValue={this.addOne} resetValue={this.reset} />\n                <Step updateStepTyping={this.updateStep}  stepValue={this.state.stepValue}/>\n            </div>\n        );\n    }\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}